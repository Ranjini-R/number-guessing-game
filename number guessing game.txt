import java.util.Random;
import java.util.Scanner;

public class AnotherNumberGuessingGame {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        int lowerBound = 1;
        int upperBound = 50; // Adjust the range as needed
        int numberToGuess = random.nextInt(upperBound - lowerBound + 1) + lowerBound;
        int numberOfTries = 0;
        boolean hasGuessedCorrectly = false;

        System.out.println("Welcome to the Number Guessing Game!");
        System.out.println("I have selected a number between " + lowerBound + " and " + upperBound + ". Try to guess it.");

        while (!hasGuessedCorrectly) {
            System.out.print("Enter your guess: ");

            if (scanner.hasNextInt()) {
                int userGuess = scanner.nextInt();
                numberOfTries++;

                if (userGuess < lowerBound || userGuess > upperBound) {
                    System.out.println("Please guess a number within the valid range.");
                } else if (userGuess < numberToGuess) {
                    System.out.println("Too low! Try again.");
                } else if (userGuess > numberToGuess) {
                    System.out.println("Too high! Try again.");
                } else {
                    hasGuessedCorrectly = true;
                    int score = calculateScore(numberOfTries);
                    System.out.println("Congratulations! You've guessed the number in " + numberOfTries + " tries.");
                    System.out.println("Your score is: " + score);
                }
            } else {
                System.out.println("Invalid input. Please enter a valid integer.");
                scanner.next(); // consume the invalid input
            }
        }

        scanner.close();
    }

    private static int calculateScore(int attempts) {
        // Higher score for fewer attempts (e.g., 100 points for each correct attempt)
        return 100 * (5 - attempts); // Adjust the scoring logic as needed
    }
}
